---
import StartLayout from '../layouts/StartLayout.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import '../styles/global.css';
import Sort from '../components/Sort.astro';
import '../styles/product.css';
---

<script>
  //@ts-nocheck
  import getDataFromApi from '../scripts/getData';
  import makeProductElement from '../scripts/makeProductElement';
  import parameterMaker from '../scripts/parameterMaker';
  import { titleChecker, gridLayoutChanger } from '../scripts/utils';

  let data,
    currentLimit = '',
    currentSort = '&_sort=offer',
    currentQuery = window.location.search + '&_sort=discount&_order=desc';
  const title = document.querySelector('.product__section__title');
  const ulManu = document.querySelectorAll('.ul__manufacturer li');
  const ulCategory = document.querySelectorAll('.ul__category li');
  const ulPrices = document.querySelectorAll('.ul__prices li');
  const numberP = document.querySelectorAll('.sort__by__number__items');
  const productGrid = document.querySelector('.grid__col4');
  const sortSelector = document.querySelectorAll('#select__sort');
  const showSelector = document.querySelectorAll('#select__show');

  function makeElements(data) {
    productGrid.innerHTML = '';
    data.forEach((product) => {
      const newProduct = makeProductElement(
        product.pictures[0],
        product.title,
        product.price,
        product.discount
      );
      productGrid.appendChild(newProduct);
    });
  }

  // Puts a number on how many products are showing
  function showListLength(data) {
    numberP.forEach((element) => {
      element.textContent = `${data.length} item(s)`;
    });
  }

  function noDataShower() {
    productGrid.innerHTML = '';
    const newHeading = document.createElement('h3');
    newHeading.textContent = 'No products found...';
    newHeading.style.padding = '2em 0';
    productGrid.append(newHeading);
    showListLength('')
  }

  const spinner = {
    startSpinner: function () {
      const spinner = document.querySelector('.lds-dual-ring');
      productGrid.innerHTML = '';
      spinner.style.display = 'block';
    },

    stopSpinner: function () {
      const spinner = document.querySelector('.lds-dual-ring');
      spinner.style.display = 'none';
    },
  };

  ulCategory.forEach((link) => {
    link.addEventListener('click', async () => {
      spinner.startSpinner();
      switch (link.textContent?.toLowerCase()) {
        case 'amplifiers':
          parameterMaker('q', 'amplifier');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        case 'speakers':
          parameterMaker('q', 'speaker');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        case 'turntables':
          parameterMaker('q', 'turntable');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        case 'cd players':
          parameterMaker('q', 'cd-player');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        case 'ceiling speakers':
          parameterMaker('q', 'speaker');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        case 'vinyl':
          parameterMaker('q', 'turntable');
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          title.textContent = window.location.search.slice(3);
          showListLength(data);
          break;

        default:
          parameterMaker('q', link.textContent?.toLowerCase());
          title.textContent = window.location.search.slice(3);
          noDataShower();
          spinner.stopSpinner();
          break;
      }
    });
  });

  ulManu.forEach((li) => {
    li.addEventListener('click', async (e) => {
      spinner.startSpinner();
      parameterMaker('q', e.target.dataset.manufacturer);
      title.textContent = window.location.search.slice(3);
      currentQuery = window.location.search + currentSort + currentLimit;
      data = await getDataFromApi(`products/${currentQuery}`);
      makeElements(data);
      spinner.stopSpinner();
      showListLength(data);
    });
  });

  ulPrices.forEach((li) => {
    li.addEventListener('click', async (e) => {
      spinner.startSpinner();
      if (
        e.target.dataset.priceRange.includes('0') &&
        e.target.dataset.priceRange.includes('799')
      ) {
        title.textContent = '£0 - £799';
      }
      if (
        e.target.dataset.priceRange.includes('800') &&
        e.target.dataset.priceRange.includes('999')
      ) {
        title.textContent = '£800 - £999';
      }
      if (
        e.target.dataset.priceRange.includes('1000') &&
        e.target.dataset.priceRange.includes('1499')
      ) {
        title.textContent = '£1000 - £1499';
      }
      if (
        e.target.dataset.priceRange.includes('1500') &&
        e.target.dataset.priceRange.includes('1999')
      ) {
        title.textContent = '£1500 - £1999';
      }
      if (
        e.target.dataset.priceRange.includes('2000') &&
        e.target.dataset.priceRange.includes('2999')
      ) {
        title.textContent = '£2000 - £2999';
      }
      if (
        e.target.dataset.priceRange.includes('3000') &&
        e.target.dataset.priceRange.includes('3499')
      ) {
        title.textContent = '£3000 - £3499';
      }
      if (
        e.target.dataset.priceRange.includes('3500') &&
        e.target.dataset.priceRange.includes('4999')
      ) {
        title.textContent = '£3500 - £4999';
      }
      if (
        e.target.dataset.priceRange.includes('5000') &&
        e.target.dataset.priceRange.includes('7999')
      ) {
        title.textContent = '£5000 - £7999';
      }
      if (
        e.target.dataset.priceRange.includes('8000') &&
        e.target.dataset.priceRange.includes('11999')
      ) {
        title.textContent = '£8000 - £11999';
      }
      if (e.target.dataset.priceRange.includes('12000')) {
        title.textContent = '£12000 and above';
      }
      data = await getDataFromApi(e.target.dataset.priceRange);
      makeElements(data);
      spinner.stopSpinner();
      showListLength(data);
    });
  });

  showSelector.forEach((selector) => {
    selector.addEventListener('change', async () => {
      spinner.startSpinner();
      if (currentQuery.includes('&_limit')) {
        currentQuery = currentQuery.slice(0, -10);
      }
      switch (selector.value) {
        case '0':
          // Needed to sync both show selectors with the value picked
          showSelector.forEach((selector2) => {
            selector2.value = '0';
          });
          currentLimit = '';
          data = await getDataFromApi(`products/${currentQuery}${currentLimit}`);
          makeElements(data);
          showListLength(data);
          spinner.stopSpinner();
          break;

        case '05':
          showSelector.forEach((selector2) => {
            selector2.value = '05';
          });
          currentLimit = '&_limit=05';
          data = await getDataFromApi(`products/${currentQuery}${currentLimit}`);
          makeElements(data);
          showListLength(data);
          spinner.stopSpinner();
          break;

        case '10':
          showSelector.forEach((selector2) => {
            selector2.value = '10';
          });
          currentLimit = '&_limit=10';
          data = await getDataFromApi(`products/${currentQuery}${currentLimit}`);
          makeElements(data);
          spinner.stopSpinner();
          showListLength(data);
          break;

        case '20':
          showSelector.forEach((selector2) => {
            selector2.value = '20';
          });
          currentLimit = '&_limit=20';
          data = await getDataFromApi(`products/${currentQuery}${currentLimit}`);
          makeElements(data);
          spinner.stopSpinner();
          showListLength(data);
          break;

        default:
          break;
      }
    });
  });

  sortSelector.forEach((selector) => {
    selector.addEventListener('change', async () => {
      spinner.startSpinner();
      switch (selector.value) {
        case 'price-ascending':
          // Needed to sync both sort selectors with the value picked
          sortSelector.forEach((selector2) => {
            selector2.value = 'price-ascending';
          });
          currentSort = '&_sort=price&_order=asc';
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          break;

        case 'price-descending':
          sortSelector.forEach((selector2) => {
            selector2.value = 'price-descending';
          });
          currentSort = '&_sort=price&_order=desc';
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          break;

        case 'name':
          sortSelector.forEach((selector2) => {
            selector2.value = 'name';
          });
          currentSort = '&_sort=title&_order=asc';
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          break;

        case 'offer':
          sortSelector.forEach((selector2) => {
            selector2.value = 'offer';
          });
          currentSort = '&_sort=discount&_order=desc';
          currentQuery = window.location.search + currentSort + currentLimit;
          data = await getDataFromApi(`products/${currentQuery}`);
          makeElements(data);
          spinner.stopSpinner();
          break;

        default:
          break;
      }
    });
  });

  window.onload = async () => {
    // Strings to loop every manufacturer product count
    const stringsToLoop = [
      'products?q=creek',
      'products?q=exposure',
      'products?q=parasound',
      'products?q=manley',
      'products?q=project',
      'products?q=boesendorfer',
      'products?q=epos',
      'products?q=harbeth',
      'products?q=jolida',
    ];

    const pricesToLoop = {
      '0': 'products?price_gte=0&price_lte=799',
      '800': 'products?price_gte=800&price_lte=999',
      '1000': 'products?price_gte=1000&price_lte=1499',
      '1500': 'products?price_gte=1500&price_lte=1999',
      '2000': 'products?price_gte=2000&price_lte=2999',
      '3000': 'products?price_gte=3000&price_lte=3499',
      '3500': 'products?price_gte=3500&price_lte=4999',
      '5000': 'products?price_gte=5000&price_lte=7999',
      '8000': 'products?price_gte=8000&price_lte=11999',
      '12000': 'products?price_gte=12000',
    };

    // Makes products when you click on a category from /shop-category site and search
    const dataFromLink = await getDataFromApi(
      `products/${window.location.search}&_sort=discount&_order=desc`
    );
    if(dataFromLink.length === 0) {
      noDataShower()
      title.textContent = window.location.search.slice(3);
      showListLength(dataFromLink);
    } else {
      title.textContent = window.location.search.slice(3);
      makeElements(dataFromLink);
      showListLength(dataFromLink);
    }
   

    // For the number of products on each manufacturer
    stringsToLoop.forEach(async (element) => {
      const dataLength = await getDataFromApi(element);
      document.querySelector(`.product__count__${element.slice(11)}`).textContent =
        dataLength.length;
    });

    // For the prices section in the filter
    Object.entries(pricesToLoop).forEach(async (key) => {
      const dataLength1 = await getDataFromApi(key[1]);
      document.querySelector(`.product__count__${key[0]}`).textContent = dataLength1.length;
    });
  };
</script>

<StartLayout title="Search products - HIFI-corner">
  <div class="width__con">
    <Breadcrumbs />
    <div class="grid__con">
      <section class="filter__section">
        <div class="filter__products">
          <ul class="ul__category">
            <li>Amplifiers</li>
            <li>Speakers</li>
            <li>Turntables</li>
            <li>CD players</li>
            <li>Streamers</li>
            <li>Cables</li>
            <li>Furniture</li>
            <li>Headphones</li>
            <li>Home Cinema</li>
            <li>Ceiling speakers</li>
            <li>TV</li>
            <li>Vinyl</li>
          </ul>
        </div>
        <div class="filter__manufacturer">
          <div class="flex__con">
            <h3>shop by</h3>
            <p class="p--black">Filter</p>
            <p class="p--black p--upper">price</p>
          </div>
          <ul class="ul__prices">
            <li data-price-range="products?price_gte=0&price_lte=799">
              £0.00 - £799.99 (<span class="product__count__0"></span>)
            </li>
            <li data-price-range="products?price_gte=800&price_lte=999">
              £800.00 - £999.99 (<span class="product__count__800"></span>)
            </li>
            <li data-price-range="products?price_gte=1000&price_lte=1499">
              £1,000.00 - £1,499.99 (<span class="product__count__1000"></span>)
            </li>
            <li data-price-range="products?price_gte=1500&price_lte=1999">
              £1,500.00 - £1,999.99 (<span class="product__count__1500"></span>)
            </li>
            <li data-price-range="products?price_gte=2000&price_lte=2999">
              £2,000.00 - £2,999.99 (<span class="product__count__2000"></span>)
            </li>
            <li data-price-range="products?price_gte=3000&price_lte=3499">
              £3,000.00 - £3,499.99 (<span class="product__count__3000"></span>)
            </li>
            <li data-price-range="products?price_gte=3500&price_lte=4999">
              £3,500.00 - £4,999.99 (<span class="product__count__3500"></span>)
            </li>
            <li data-price-range="products?price_gte=5000&price_lte=7999">
              £5,000.00 - £7,999.99 (<span class="product__count__5000"></span>)
            </li>
            <li data-price-range="products?price_gte=8000&price_lte=11999">
              £8,000.00 - £11,999.99 (<span class="product__count__8000"></span>)
            </li>
            <li data-price-range="products?price_gte=12000">
              £12,000.00 and above(<span class="product__count__12000"></span>)
            </li>
          </ul>
          <h3 class="p--black p--upper">manufacturer</h3>
          <ul class="ul__manufacturer">
            <li data-manufacturer="creek">
              Creek (<span data-manufacturer="creek" class="product__count__creek"></span>)
            </li>
            <li data-manufacturer="exposure">
              Exposure (<span data-manufacturer="exposure" class="product__count__exposure"></span>)
            </li>
            <li data-manufacturer="parasound">
              Parasound (<span data-manufacturer="parasound" class="product__count__parasound"
              ></span>)
            </li>
            <li data-manufacturer="manley">
              Manley (<span data-manufacturer="manley" class="product__count__manley"></span>)
            </li>
            <li data-manufacturer="project">
              Project (<span data-manufacturer="project" class="product__count__project"></span>)
            </li>
            <li data-manufacturer="boesendorfer">
              Boesendorfer (<span
                data-manufacturer="boesendorfer"
                class="product__count__boesendorfer"></span>)
            </li>
            <li data-manufacturer="epos">
              Epos (<span data-manufacturer="epos" class="product__count__epos"></span>)
            </li>
            <li data-manufacturer="harbeth">
              Harbeth (<span data-manufacturer="harbeth" class="product__count__harbeth"></span>)
            </li>
            <li data-manufacturer="jolida">
              Jolida (<span data-manufacturer="jolida" class="product__count__jolida"></span>)
            </li>
          </ul>
        </div>
      </section>
      <section class="product__section">
        <h1 class="product__section__title"></h1>
        <Sort />
        <div class="lds-dual-ring"></div>
        <section class="grid__col4"></section>
        <Sort />
      </section>
      <section class="manufacturer__section">
        <p class="manufacturer__p">Manufacturer</p>
        <ul class="manufacturer__ul">
          <li class="p--upper">Jolida</li>
        </ul>
      </section>
    </div>
  </div>
</StartLayout>

<style>
  .grid__col4 {
    padding: 1em 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1em;
  }

  .product h4 {
    height: 10px;
  }

  ul {
    list-style: none;
  }

  ul li {
    cursor: pointer;
    transition: transform 0.2s;
  }

  ul li:hover {
    transform: scale(1.1);
  }

  body {
    background-color: black;
  }

  .product__section__title {
    text-transform: capitalize;
    padding-bottom: 1em;
  }

  .grid__con {
    display: grid;
    grid-template-columns: 1fr 3fr 1fr;
  }

  .width__con {
    margin: 0 10em;
    background-color: white;
    font-family: 'Museo sans rounded webfont';
    padding: 0 2em;
  }

  .p--black {
    color: black;
  }

  .p--upper,
  .filter__section h3 {
    text-transform: uppercase;
  }
  
  .filter__section {
    color: var(--text-color);
    padding: 0 2em;
    font-weight: 700;
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .filter__products,
  .filter__manufacturer {
    background-color: var(--filter-bg-color);
    padding: 2em;
  }

  .filter__manufacturer {
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .filter__section ul {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
  }

  .flex__con {
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .manufacturer__section {
    padding: 2em;
  }

  .manufacturer__p {
    color: var(--text-color);
  }

  .manufacturer__ul {
    padding: 0.5em 0 0.5em 1em;
  }

  .lds-dual-ring {
    display: none;
    position: relative;
    top: calc(5% - 40px);
    left: calc(50% - 40px);
    width: 80px;
    height: 80px;
  }
  .lds-dual-ring:after {
    content: ' ';
    display: block;
    width: 64px;
    height: 64px;
    margin: 8px;
    border-radius: 50%;
    border: 6px solid #000;
    border-color: #000 transparent #000 transparent;
    animation: lds-dual-ring 1.2s linear infinite;
  }
  @keyframes lds-dual-ring {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>
